# EXEMPLE1:
# outputs that same text but:
#   #  with all vowels (A, E, I, O, and U) omitted,  # whether inputted in uppercase or lowercase.

# upper() and . lower()

def main():
    twiter = input("Input: ")
    print(shorten(twiter))


def shorten(word):
    vocals = ["a", "e", "i", "o", "u", "A", "E", "I", "O", "U"]
    output_text = ""

    for lletra in word:
        if lletra not in vocals:
            output_text += lletra

    return str(output_text)


if __name__ == "__main__":
    main()



# pytest test_twttr.py
# testar el programa twttr

from twttr import shorten

def main():
    shorten_test()

def test_shorten():
    assert shorten("twiter") == "twtr"
    assert shorten("GAT") == "GT"
    assert shorten("AEio") == ""


if __name__ == "__main__":
    main()


# EXEMPLE 2

# upper() and . lower()

def main():
    twiter = input("Input: ")
    print(shorten(twiter))


def shorten(word):
    vocals = ["a", "e", "i", "o", "u", "A", "E", "I", "O", "U"]
    output_text = ""

    for lletra in word:
        if lletra not in vocals:
            output_text += lletra

    return str(output_text)


if __name__ == "__main__":
    main()


from bank import value


def test_value():
    assert value("hello") == 0
    assert value("h") == 20
    assert value("AEio") == 100
    assert value("hello, thanks for all") == 0
    assert value("HELLO") == 0



# EXEMPLE 4


import pytest
from fuel import convert
from fuel import gauge


#def test_zero_division():
#    with pytest.raises(ZeroDivisionError):
#        gauge("4/0")

def test_convert():
    assert convert("1/2") == 50
    assert convert("4/4") == 100


def test_gauge():
    assert gauge(0) == "E"
    assert gauge(1) == "E"
    assert gauge(99) == "F"
    assert gauge(50) == "50%"


def test_str():
    with pytest.raises(ValueError):
        convert("cat/dog")

def test_0():
    with pytest.raises(ZeroDivisionError):
        convert("1/0")


